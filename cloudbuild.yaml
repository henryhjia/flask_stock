steps:
# 1. Install dependencies
- name: 'python:3.10'
  id: 'install-deps'
  entrypoint: 'pip'
  args: ['install', '-r', 'requirements.txt', '--user']

# 2. Run tests
- name: 'python:3.10'
  id: 'run-tests'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      apt-get update && apt-get install -y postgresql-client
      export PATH=$$PATH:/usr/lib/postgresql/17/bin
      mkdir -p /var/run/postgresql
      chown -R postgres:postgres /var/run/postgresql
      mkdir /tmp/db
      chown -R postgres:postgres /tmp/db
      sudo -u postgres initdb -D /tmp/db
      sudo -u postgres pg_ctl -D /tmp/db -l /tmp/db/logfile start
      sleep 5
      sudo -u postgres createdb test
      python -m pytest
      sudo -u postgres pg_ctl -D /tmp/db stop
  waitFor: ['install-deps']

# 3. Build the container image
- name: 'gcr.io/cloud-builders/docker'
  id: 'build-image'
  args:
    - 'build'
    - '-t'
    - 'us-central1-docker.pkg.dev/$PROJECT_ID/flask-stock-repo/flask-stock-service:$COMMIT_SHA'
    - '.'
  waitFor: ['run-tests']

# 4. Push the container image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  id: 'push-image'
  args:
    - 'push'
    - 'us-central1-docker.pkg.dev/$PROJECT_ID/flask-stock-repo/flask-stock-service:$COMMIT_SHA'
  waitFor: ['build-image']

# 5. Deploy to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'deploy-service'
  entrypoint: 'gcloud'
  args:
    - 'run'
    - 'deploy'
    - 'flask-stock-service'
    - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/flask-stock-repo/flask-stock-service:$COMMIT_SHA'
    - '--region=us-central1'
    - '--allow-unauthenticated'
    - '--set-env-vars=INSTANCE_CONNECTION_NAME=${_INSTANCE_CONNECTION_NAME},DB_NAME=${_DB_NAME},DB_USER=${_DB_USER}'
    - '--set-secrets=DB_PASS=DB_PASS:latest'
  waitFor: ['push-image']

# Define user-defined variables
substitutions:
  _INSTANCE_CONNECTION_NAME: 'flask-stock-app-2025:us-central1:flask-stock-db-instance'
  _DB_NAME: 'flask_stock_db'
  _DB_USER: 'stock_user'

images:
- 'us-central1-docker.pkg.dev/$PROJECT_ID/flask-stock-repo/flask-stock-service:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
